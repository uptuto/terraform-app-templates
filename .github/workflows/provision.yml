name: "Provision GitHub Apps"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'apps.yaml'
      - 'terraform/**'
      - 'scripts/generate_tfvars.py'
  push:
    branches:
      - main
    paths:
      - 'apps.yaml'
      - 'terraform/**'
      - 'scripts/generate_tfvars.py'

jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Python deps
        run: pip install pyyaml

      - name: Generate tfvars files
        run: |
          mkdir -p terraform/vars
          python3 scripts/generate_tfvars.py

      - name: Debug List contents of terraform vars
        run: |
          ls -l terraform/vars
          cat terraform/vars/*.auto.tfvars.json

      - uses: hashicorp/setup-terraform@v3

      - name: Authenticate with Terraform Cloud
        run: |
          cat > ~/.terraformrc <<EOF
          credentials "app.terraform.io" {
            token = "${TF_API_TOKEN}"
          }
          EOF
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init & Plan
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          cd terraform
          terraform init
          for f in ../terraform/vars/*.auto.tfvars.json; do
            echo "Planning with $f"
            terraform plan -var "github_token=${GITHUB_TOKEN}" -var-file="$f"
          done

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          cd terraform
          for f in ../terraform/vars/*.auto.tfvars.json; do
            echo "Applying with $f"
            terraform apply -auto-approve -var "github_token=${GITHUB_TOKEN}" -var-file="$f"
          done
